public static double TRPSCQ2D(int dH, Constraint C){
		double rt = 0;
		C.corner[2] = 0;
		double c = DimMax3_New(2, dH, C);
		Constraint cstt=(C);
		cstt.corner[2] = c;
		cstt.keyNodes[2] = key_node[2];
		Result sl;
		while (c > 0.0) {
			sl=new Result();
			rt = Math.max(rt, c);
			sl.value[1] = DimMax3_New(1, dH, cstt);
			sl.value[2] = c;
			sl.size = dim_size[1];
			node[] newVer = new node[sl.size];
			int idex = 0;
			for(int i = 0;i < dim_size[1]; i++) {
				if (visit_record.contains(vert[1][i].nodeId)) {
					continue;
				}
				newVer[idex++] = vert[1][i];
			}
			sl.size = idex;
			sl.ver = newVer;
			for(int i=1;i<=d;i++) {
				sl.keyNodes[i]=key_node[i];
			}
			for(int i=1;i<=d;i++) {
				sl.dim_visit[i]=1;
			}
			sl.dim_belong = d;
			RES[2].result.add(sl);
			cstt.corner[1] = sl.value[1];
			cstt.corner[2] = 0;
			c = DimMax3_New(2, dH, cstt);
			for (int i = 0; i < dim_size[2]; i++) {
				vert[3][i] = vert[2][i];
			}
			dim_size[3] = dim_size[2];
			cstt.corner[2] = c;
			cstt.keyNodes[2] = key_node[2];
		}
		return rt;
	}
